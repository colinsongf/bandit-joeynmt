name: "reverse_experiment"

data:
    src: "src"
    trg: "trg"
    train: "test/data/reverse/train"
    dev: "test/data/reverse/dev"
    test: "test/data/reverse/test"
    level: "word"
    lowercase: False
    max_sent_length: 11
    voc_min_freq: 0
    voc_limit: 100
    #src_vocab: "my_model/src_vocab.txt"
    #trg_vocab: "my_model/trg_vocab.txt"

testing:
    beam_size: 10
    alpha: 1.0

training:
    #load_model: "my_model/3300.params"
    random_seed: 42
    optimizer: "adam"
    loss: "crossentropy"
    learning_rate: {"mt": 0.0001, "regulator": 0.003}
   # learning_rate: 0.0001
    learning_rate_min: 0.00002
#    clip_grad_val: 1.0
    weight_decay: 0.0
    normalization: "batch"  # "tokens"
    clip_grad_norm: 1.0
    batch_size: 10
    valid_batch_size: 10
    scheduling: "plateau"
    patience: 1
    decrease_factor: 0.5
    schedule_after_loss: True
    epochs: 10
    validation_freq: 500
    logging_freq: 100
    eval_metric: "bleu"
    model_dir: "reverse" #_regulated"
    overwrite: True
    shuffle: True
    use_cuda: False
    max_output_length: 11
    print_valid_sents: 3
    loss_weights: {"mt": 1.0, "regulator": 1.0}
    load_model: "reverse/1000.ckpt"
    baseline: "first"  # mean, first, previous, False  # baseline reward for regulator
    weak_baseline: True
    search: "beam"
    entropy_regularizer: 0.1  # encourage exploration
    budget: 5000
    cost_weight: 0.9
    budgeted_cost: False
    only_sup: 1
    chunk_type: "sbleu"  # marking
    self_entropy: False # encourage high entropy for self-training
    weak_baseline: True
    init_from_mt: True
    self_attention_drop: 0.9

model:
    initializer: "xavier"
    embed_initializer: "normal"
    embed_init_weight: 0.1
    bias_initializer: "zeros"
    init_rnn_orthogonal: False
    lstm_forget_gate: 0.
    encoder:
        type: "lstm"
        embeddings:
            embedding_dim: 16
            scale: False
        hidden_size: 64
        bidirectional: True
        dropout: 0.1
        num_layers: 1
    decoder:
        type: "lstm"
        embeddings:
            embedding_dim: 16
            scale: False
        hidden_size: 64
        dropout: 0.1
        hidden_dropout: 0.1
        num_layers: 1
        input_feeding: True
        bridge: False
        attention: "bahdanau"
    regulator:
        type: "lstm"
        embeddings:
            embedding_dim: 16
            scale: False
        hidden_size: 63
        middle_size: 31
        dropout: 0.1
        output_labels: ["none", "self", "weak", "full"]
        #["none", "self", "weak", "full"]
        num_layers: 2
        bidirectional: True
